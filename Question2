module _16to1mux(in,out,sel);
  input [3:0] sel;
  input [15:0] in;
  output out;
  wire [3:0]inter;
  
  assign inter[0]=sel[3]?(sel[2]?in[3]:in[2]):(sel[2]?in[1]:in[0]);
  assign inter[1]=sel[3]?(sel[2]?in[7]:in[6]):(sel[2]?in[5]:in[4]);
  assign inter[0]=sel[3]?(sel[2]?in[11]:in[10]):(sel[2]?in[9]:in[8]);
  assign inter[0]=sel[3]?(sel[2]?in[15]:in[14]):(sel[2]?in[13]:in[12]);
  
  assign out=sel[1]?(sel[0]?inter[3]:inter[2]):(sel[0]?inter[1]:inter[0]);
endmodule

//testbench
module testmux_16; 
  reg [15:0] in; 
  reg [3:0] sel; 
wire out;
_16to1mux mux(in,out,sel); 
  initial;
begin
  $monitor("in=%b | sel=%b | out=%b",in,sel,out);
end
initial
begin
in=16'hFAC7; sel=4'b0000; 
#30 in=16'hFAC7; sel=4'b0001; 
#30 in=16'hFAC7; sel=4'b0010;
#30 in=16'hFAC7; sel=4'b0011;
#30 in=16'hFAC7; sel=4'b0100; 
#30 in=16'hFAC7; sel=4'b0101; 
#30 in=16'hFAC7; sel=4'b0110;
#30 in=16'hFAC7; sel=4'b0111;
#30 in=16'hFAC7; sel=4'b1000;
#30 in=16'hFAC7; sel=4'b1001;
#30 in=16'hFAC7; sel=4'b1010; 
#30 in=16'hFAC7; sel=4'b1011;
#30 in=16'hFAC7; sel=4'b1100; 
#30 in=16'hFAC7; sel=4'b1101; 
#30 in=16'hFAC7; sel=4'b1110; 
#30 in=16'hFAC7; sel=4'b1111;
end
endmodule
